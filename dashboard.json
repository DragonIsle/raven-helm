{
  "id": null,
  "uid": "ckf-perf-v2",
  "title": "ClickHouse • Kafka • Flink — Perf (clean)",
  "tags": ["clickhouse","kafka","flink","perf"],
  "timezone": "browser",
  "schemaVersion": 36,
  "version": 1,
  "refresh": "15s",
  "time": { "from": "now-6h", "to": "now" },
  "templating": {
    "list": [
      {
        "name": "ds",
        "type": "datasource",
        "query": "prometheus",
        "refresh": 1,
        "current": { "text": "Prometheus", "value": "Prometheus" }
      },
      { "name": "clickhouse_job", "type": "constant", "label": "CH job", "query": "raven-setup-clickhouse" },
      { "name": "kafka_job", "type": "constant", "label": "Kafka job", "query": "raven-setup-kafka-jmx-metrics" },
      { "name": "flink_job", "type": "constant", "label": "Flink job", "query": "raven-setup-flink-metrics" }
    ]
  },
  "panels": [
    { "type": "row", "title": "ClickHouse", "gridPos": { "x": 0, "y": 0, "w": 24, "h": 1 } },

    {
      "type": "timeseries",
      "title": "CH Active Queries",
      "datasource": "$ds",
      "targets": [
        { "expr": "ClickHouseMetrics_Query{job=\"$clickhouse_job\"}", "legendFormat": "active {{instance}}", "refId": "A" }
      ],
      "gridPos": { "x": 0, "y": 1, "w": 8, "h": 7 }
    },
    {
      "type": "timeseries",
      "title": "CH QPS",
      "datasource": "$ds",
      "targets": [
        { "expr": "rate(ClickHouseProfileEvents_Query{job=\"$clickhouse_job\"}[1m])", "legendFormat": "qps {{instance}}", "refId": "A" }
      ],
      "gridPos": { "x": 8, "y": 1, "w": 8, "h": 7 }
    },
    {
      "type": "timeseries",
      "title": "CH Rows/s (Read/Insert)",
      "datasource": "$ds",
      "targets": [
        { "expr": "rate(ClickHouseProfileEvents_SelectedRows{job=\"$clickhouse_job\"}[1m])", "legendFormat": "read {{instance}}", "refId": "A" },
        { "expr": "rate(ClickHouseProfileEvents_InsertedRows{job=\"$clickhouse_job\"}[1m])", "legendFormat": "insert {{instance}}", "refId": "B" }
      ],
      "gridPos": { "x": 16, "y": 1, "w": 8, "h": 7 }
    },
    {
      "type": "timeseries",
      "title": "CH CPU (cores used / wait)",
      "datasource": "$ds",
      "fieldConfig": { "defaults": { "unit": "none" } },
      "targets": [
        { "expr": "sum by(pod) ( rate(ClickHouseProfileEvents_OSCPUVirtualTimeMicroseconds{job=\"$clickhouse_job\"}[1m]) ) / 1e6", "legendFormat": "cores {{pod}}", "refId": "A" },
        { "expr": "sum by(pod) ( rate(ClickHouseProfileEvents_OSCPUWaitMicroseconds{job=\"$clickhouse_job\"}[1m]) ) / 1e6", "legendFormat": "wait s/s {{pod}}", "refId": "B" }
      ],
      "gridPos": { "x": 0, "y": 8, "w": 12, "h": 7 }
    },
    {
      "type": "stat",
      "title": "CH Replicas Up",
      "datasource": "$ds",
      "targets": [
        { "expr": "count(up{job=\"$clickhouse_job\"} == 1)", "refId": "A" }
      ],
      "gridPos": { "x": 0, "y": 51, "w": 6, "h": 6 }
    },
    {
      "type": "timeseries",
      "title": "CH Pod CPU Usage (cores)",
      "datasource": "$ds",
      "targets": [
        { "expr": "sum(rate(container_cpu_usage_seconds_total{namespace=\"default\",pod=~\"raven-setup-clickhouse.*\"}[2m])) by (pod)", "refId": "A" }
      ],
      "gridPos": { "x": 6, "y": 51, "w": 9, "h": 6 }
    },
    {
      "type": "timeseries",
      "title": "CH Pod Memory Usage (bytes)",
      "datasource": "$ds",
      "targets": [
        { "expr": "sum(container_memory_usage_bytes{namespace=\"default\",pod=~\"raven-setup-clickhouse.*\"}) by (pod)", "refId": "A" }
      ],
      "fieldConfig": { "defaults": { "unit": "bytes" } },
      "gridPos": { "x": 15, "y": 51, "w": 9, "h": 6 }
    },

    { "type": "row", "title": "Kafka (JMX)", "gridPos": { "x": 0, "y": 15, "w": 24, "h": 1 } },

    {
      "type": "timeseries",
      "title": "Kafka Messages In / Out (per sec)",
      "datasource": "$ds",
      "targets": [
        { "expr": "sum(rate(kafka_server_brokertopicmetrics_messagesinpersec_count{job=\"$kafka_job\"}[1m]))", "legendFormat": "in", "refId": "A" },
        { "expr": "sum(rate(kafka_server_brokertopicmetrics_messagesoutpersec_count{job=\"$kafka_job\"}[1m]))", "legendFormat": "out", "refId": "B" }
      ],
      "gridPos": { "x": 0, "y": 16, "w": 12, "h": 7 }
    },
    {
      "type": "timeseries",
      "title": "Kafka Bytes In / Out (per sec)",
      "datasource": "$ds",
      "fieldConfig": { "defaults": { "unit": "Bps" } },
      "targets": [
        { "expr": "sum(rate(kafka_server_brokertopicmetrics_bytesinpersec_count{job=\"$kafka_job\"}[1m]))", "legendFormat": "bytes in", "refId": "A" },
        { "expr": "sum(rate(kafka_server_brokertopicmetrics_bytesoutpersec_count{job=\"$kafka_job\"}[1m]))", "legendFormat": "bytes out", "refId": "B" }
      ],
      "gridPos": { "x": 12, "y": 16, "w": 12, "h": 7 }
    },
    {
      "type": "stat",
      "title": "Active Controller",
      "datasource": "$ds",
      "targets": [
        { "expr": "max(kafka_controller_kafkacontroller_activecontrollercount_value{job=\"$kafka_job\"})", "refId": "A" }
      ],
      "gridPos": { "x": 0, "y": 23, "w": 6, "h": 6 }
    },
    {
      "type": "timeseries",
      "title": "Under-replicated Partitions",
      "datasource": "$ds",
      "targets": [
        { "expr": "sum(kafka_server_replicamanager_underreplicatedpartitions_value{job=\"$kafka_job\"})", "legendFormat": "under-repl", "refId": "A" }
      ],
      "gridPos": { "x": 6, "y": 23, "w": 18, "h": 6 }
    },
    {
      "type": "stat",
      "title": "Kafka Brokers Up",
      "datasource": "$ds",
      "targets": [
        { "expr": "count(up{job=\"$kafka_job\"} == 1)", "refId": "A" }
      ],
      "gridPos": { "x": 0, "y": 57, "w": 6, "h": 6 }
    },
    {
      "type": "timeseries",
      "title": "Kafka Pod CPU Usage (cores)",
      "datasource": "$ds",
      "targets": [
        { "expr": "sum(rate(container_cpu_usage_seconds_total{namespace=\"default\",pod=~\"raven-setup-kafka.*\"}[2m])) by (pod)", "refId": "A" }
      ],
      "gridPos": { "x": 6, "y": 57, "w": 9, "h": 6 }
    },
    {
      "type": "timeseries",
      "title": "Kafka Pod Memory Usage (bytes)",
      "datasource": "$ds",
      "targets": [
        { "expr": "sum(container_memory_usage_bytes{namespace=\"default\",pod=~\"raven-setup-kafka.*\"}) by (pod)", "refId": "A" }
      ],
      "fieldConfig": { "defaults": { "unit": "bytes" } },
      "gridPos": { "x": 15, "y": 57, "w": 9, "h": 6 }
    },

    { "type": "row", "title": "Flink", "gridPos": { "x": 0, "y": 29, "w": 24, "h": 1 } },

    {
      "type": "timeseries",
      "title": "Flink: Running Jobs & TaskManagers",
      "datasource": "$ds",
      "targets": [
        { "expr": "sum(flink_jobmanager_numRunningJobs{job=\"$flink_job\"})", "legendFormat": "running jobs", "refId": "A" },
        { "expr": "sum(flink_jobmanager_numRegisteredTaskManagers{job=\"$flink_job\"})", "legendFormat": "registered TMs", "refId": "B" }
      ],
      "gridPos": { "x": 0, "y": 30, "w": 12, "h": 7 }
    },
    {
      "type": "timeseries",
      "title": "Flink TM CPU Load (%)",
      "datasource": "$ds",
      "fieldConfig": { "defaults": { "unit": "percent", "min": 0, "max": 100 } },
      "targets": [
        { "expr": "avg(flink_taskmanager_Status_JVM_CPU_Load{job=\"$flink_job\"}) * 100", "legendFormat": "CPU %", "refId": "A" }
      ],
      "gridPos": { "x": 12, "y": 30, "w": 12, "h": 7 }
    },
    {
      "type": "timeseries",
      "title": "Flink Job Restarts (rate)",
      "datasource": "$ds",
      "targets": [
        { "expr": "sum(rate(flink_jobmanager_job_numRestarts{job=\"$flink_job\"}[5m]))", "legendFormat": "restarts/s", "refId": "A" }
      ],
      "gridPos": { "x": 0, "y": 37, "w": 12, "h": 7 }
    },
    {
      "type": "timeseries",
      "title": "Flink Task Slots (Avail / Total)",
      "datasource": "$ds",
      "targets": [
        { "expr": "sum(flink_jobmanager_taskSlotsAvailable{job=\"$flink_job\"})", "legendFormat": "available", "refId": "A" },
        { "expr": "sum(flink_jobmanager_taskSlotsTotal{job=\"$flink_job\"})", "legendFormat": "total", "refId": "B" }
      ],
      "gridPos": { "x": 12, "y": 37, "w": 12, "h": 7 }
    },
    {
      "type": "timeseries",
      "title": "Flink Backpressure (%) — avg",
      "datasource": "$ds",
      "fieldConfig": { "defaults": { "unit": "percent", "min": 0, "max": 100 } },
      "targets": [
        {
          "refId": "A",
          "legendFormat": "backpressure %",
          "expr": "((avg(rate(flink_taskmanager_job_task_backPressuredTimeMsPerSecond{job=\"$flink_job\"}[1m])) / 10) or on() vector(0))"
        }
      ],
      "gridPos": { "x": 0, "y": 44, "w": 12, "h": 7 }
    },
    {
      "type": "timeseries",
      "title": "Flink Backpressure (%) — top operators",
      "datasource": "$ds",
      "fieldConfig": { "defaults": { "unit": "percent", "min": 0, "max": 100 } },
      "targets": [
        {
          "refId": "A",
          "legendFormat": "{{task_name}}",
          "expr": "topk(5, (avg by(task_name) (rate(flink_taskmanager_job_task_backPressuredTimeMsPerSecond{job=\"$flink_job\"}[1m])) / 10))"
        }
      ],
      "legend": { "show": true },
      "gridPos": { "x": 12, "y": 44, "w": 12, "h": 7 }
    },
    {
      "type": "stat",
      "title": "Flink TaskManagers Up",
      "datasource": "$ds",
      "targets": [
        { "expr": "sum(flink_jobmanager_numRegisteredTaskManagers{job=\"$flink_job\"})", "refId": "A" }
      ],
      "gridPos": { "x": 0, "y": 63, "w": 6, "h": 6 }
    },
    {
      "type": "timeseries",
      "title": "Flink Pod CPU Usage (cores)",
      "datasource": "$ds",
      "targets": [
        { "expr": "sum(rate(container_cpu_usage_seconds_total{namespace=\"default\",pod=~\"raven-setup-flink.*\"}[2m])) by (pod)", "refId": "A" }
      ],
      "gridPos": { "x": 6, "y": 63, "w": 9, "h": 6 }
    },
    {
      "type": "timeseries",
      "title": "Flink Pod Memory Usage (bytes)",
      "datasource": "$ds",
      "targets": [
        { "expr": "sum(container_memory_usage_bytes{namespace=\"default\",pod=~\"raven-setup-flink.*\"}) by (pod)", "refId": "A" }
      ],
      "fieldConfig": { "defaults": { "unit": "bytes" } },
      "gridPos": { "x": 15, "y": 63, "w": 9, "h": 6 }
    }
  ]
}
